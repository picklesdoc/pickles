<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="ea975540-3cf8-4023-a673-f0a54731659a" name="astral@JERUSALEM 2013-07-31 19:19:02" runUser="Jerusalem\astral" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Default Test Settings" id="4eed1200-b54f-4425-a966-6250c56cd149">
    <Deployment userDeploymentRoot="C:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\bin\Debug" useDefaultDeploymentRoot="false" runDeploymentRoot="astral_JERUSALEM 2013-07-31 19_19_02" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2013-07-31T19:19:02.0974874+02:00" queuing="2013-07-31T19:19:02.5021859+02:00" start="2013-07-31T19:19:02.5682296+02:00" finish="2013-07-31T19:19:03.0595270+02:00" />
  <ResultSummary outcome="Failed">
    <Counters total="8" executed="8" passed="3" error="0" failed="1" timeout="0" aborted="0" inconclusive="4" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="NotAutomatedScenario1" storage="mstestharness.dll" id="0e090158-43a1-1be8-47c2-13e1b2c9f8c7">
      <Description>Not automated scenario 1</Description>
      <Execution id="707e3183-1317-4b74-80ed-69b46ed4d3e7" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Not Automated At All</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedScenario1" />
    </UnitTest>
    <UnitTest name="AddTwoNumbers" storage="mstestharness.dll" id="6b8581c3-611e-6116-4232-a31382677735">
      <Description>Add two numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag1" />
      </TestCategory>
      <Execution id="04532745-db2d-4cb6-92f3-0aa69dd339d9" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddTwoNumbers" />
    </UnitTest>
    <UnitTest name="NotAutomatedScenario3" storage="mstestharness.dll" id="64813bea-d79b-d74b-adb5-1302eaf5641f">
      <Description>Not automated scenario 3</Description>
      <Execution id="72a1e263-32dc-4890-977c-eb174bbdc3ba" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Not Automated At All</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedScenario3" />
    </UnitTest>
    <UnitTest name="FailToAddTwoNumbers" storage="mstestharness.dll" id="b13a186e-33df-348e-f9e2-a18b445d0d6e">
      <Description>Fail to add two numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag1" />
      </TestCategory>
      <Execution id="54adf0b0-4045-40f5-aabb-15ec8ab7f1ba" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="FailToAddTwoNumbers" />
    </UnitTest>
    <UnitTest name="AddingSeveralNumbers_60" storage="mstestharness.dll" id="f4b45c2f-fc98-d23c-6179-62d5b5a59825">
      <Description>Adding several numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag2" />
      </TestCategory>
      <Execution id="6b709f98-be85-469b-83e8-31eda6e98a4c" />
      <Properties>
        <Property>
          <Key>Parameter:first number</Key>
          <Value>60</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>60</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>260</Value>
        </Property>
        <Property>
          <Key>Parameter:third number</Key>
          <Value>130</Value>
        </Property>
        <Property>
          <Key>Parameter:second number</Key>
          <Value>70</Value>
        </Property>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddingSeveralNumbers_60" />
    </UnitTest>
    <UnitTest name="NotAutomatedAddingTwoNumbers" storage="mstestharness.dll" id="2124dd33-7aaa-d4fb-c72f-98ad434251c0">
      <Description>Not automated adding two numbers</Description>
      <Execution id="c417c075-9548-4273-a286-38b2b37f4ca8" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedAddingTwoNumbers" />
    </UnitTest>
    <UnitTest name="AddingSeveralNumbers_40" storage="mstestharness.dll" id="4d0f7327-ed22-9a43-969a-ac2ea8102d66">
      <Description>Adding several numbers</Description>
      <TestCategory>
        <TestCategoryItem TestCategory="tag2" />
      </TestCategory>
      <Execution id="02f4f334-156d-4116-a153-6936282df0e0" />
      <Properties>
        <Property>
          <Key>Parameter:first number</Key>
          <Value>40</Value>
        </Property>
        <Property>
          <Key>VariantName</Key>
          <Value>40</Value>
        </Property>
        <Property>
          <Key>Parameter:third number</Key>
          <Value>90</Value>
        </Property>
        <Property>
          <Key>Parameter:second number</Key>
          <Value>50</Value>
        </Property>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Addition</Value>
        </Property>
        <Property>
          <Key>Parameter:result</Key>
          <Value>180</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.AdditionFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="AddingSeveralNumbers_40" />
    </UnitTest>
    <UnitTest name="NotAutomatedScenario2" storage="mstestharness.dll" id="067e1c92-2860-531b-28dc-c2863e91b7f5">
      <Description>Not automated scenario 2</Description>
      <Execution id="115665e5-05e1-4d23-acec-523b3018ad2f" />
      <Properties>
        <Property>
          <Key>FeatureTitle</Key>
          <Value>Not Automated At All</Value>
        </Property>
      </Properties>
      <TestMethod codeBase="C:/Users/astral/Documents/GitHub/pickles-testresults/TestHarness/MsTest/bin/Debug/MsTestHarness.dll" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature, MsTestHarness, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="NotAutomatedScenario2" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="4d0f7327-ed22-9a43-969a-ac2ea8102d66" executionId="02f4f334-156d-4116-a153-6936282df0e0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f4b45c2f-fc98-d23c-6179-62d5b5a59825" executionId="6b709f98-be85-469b-83e8-31eda6e98a4c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6b8581c3-611e-6116-4232-a31382677735" executionId="04532745-db2d-4cb6-92f3-0aa69dd339d9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b13a186e-33df-348e-f9e2-a18b445d0d6e" executionId="54adf0b0-4045-40f5-aabb-15ec8ab7f1ba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2124dd33-7aaa-d4fb-c72f-98ad434251c0" executionId="c417c075-9548-4273-a286-38b2b37f4ca8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0e090158-43a1-1be8-47c2-13e1b2c9f8c7" executionId="707e3183-1317-4b74-80ed-69b46ed4d3e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="067e1c92-2860-531b-28dc-c2863e91b7f5" executionId="115665e5-05e1-4d23-acec-523b3018ad2f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="64813bea-d79b-d74b-adb5-1302eaf5641f" executionId="72a1e263-32dc-4890-977c-eb174bbdc3ba" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="02f4f334-156d-4116-a153-6936282df0e0" testId="4d0f7327-ed22-9a43-969a-ac2ea8102d66" testName="AddingSeveralNumbers_40" computerName="JERUSALEM" duration="00:00:00.0406079" startTime="2013-07-31T19:19:02.5912450+02:00" endTime="2013-07-31T19:19:02.9098440+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="02f4f334-156d-4116-a153-6936282df0e0">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0,0s)
Given I have entered 40 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(40) (0,0s)
And I have entered 50 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(50) (0,0s)
And I have entered 90 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(90) (0,0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0,0s)
Then the result should be 180 on the screen
-&gt; done: AdditionSteps.ThenTheResultShouldBeOnTheScreen(180) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6b709f98-be85-469b-83e8-31eda6e98a4c" testId="f4b45c2f-fc98-d23c-6179-62d5b5a59825" testName="AddingSeveralNumbers_60" computerName="JERUSALEM" duration="00:00:00.0003784" startTime="2013-07-31T19:19:02.9128443+02:00" endTime="2013-07-31T19:19:02.9148473+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6b709f98-be85-469b-83e8-31eda6e98a4c">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0,0s)
Given I have entered 60 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(60) (0,0s)
And I have entered 70 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(70) (0,0s)
And I have entered 130 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(130) (0,0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0,0s)
Then the result should be 260 on the screen
-&gt; done: AdditionSteps.ThenTheResultShouldBeOnTheScreen(260) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="04532745-db2d-4cb6-92f3-0aa69dd339d9" testId="6b8581c3-611e-6116-4232-a31382677735" testName="AddTwoNumbers" computerName="JERUSALEM" duration="00:00:00.0003797" startTime="2013-07-31T19:19:02.9158480+02:00" endTime="2013-07-31T19:19:02.9188487+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="04532745-db2d-4cb6-92f3-0aa69dd339d9">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0,0s)
Given I have entered 1 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(1) (0,0s)
And I have entered 2 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(2) (0,0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0,0s)
Then the result should be 3 on the screen
-&gt; done: AdditionSteps.ThenTheResultShouldBeOnTheScreen(3) (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="54adf0b0-4045-40f5-aabb-15ec8ab7f1ba" testId="b13a186e-33df-348e-f9e2-a18b445d0d6e" testName="FailToAddTwoNumbers" computerName="JERUSALEM" duration="00:00:00.0484730" startTime="2013-07-31T19:19:02.9208496+02:00" endTime="2013-07-31T19:19:02.9708844+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="54adf0b0-4045-40f5-aabb-15ec8ab7f1ba">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0,0s)
Given I have entered 1 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(1) (0,0s)
And I have entered 2.2 into the calculator
-&gt; done: AdditionSteps.GivenIHaveEnteredIntoTheCalculator(2,2) (0,0s)
When I press add
-&gt; done: AdditionSteps.WhenIPressAdd() (0,0s)
Then the result should be 3.2 on the screen
-&gt; error: Assert.AreEqual failed. Expected:&lt;3.2&gt;. Actual:&lt;3&gt;.</StdOut>
        <ErrorInfo>
          <Message>Assert.AreEqual failed. Expected:&lt;3.2&gt;. Actual:&lt;3&gt;. </Message>
          <StackTrace>   w Pickles.TestHarness.MsTest.AdditionSteps.ThenTheResultShouldBeOnTheScreen(Decimal p0) w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\AdditionSteps.cs:wiersz 39
   w lambda_method(Closure , IContextManager , Decimal )
   w TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   w TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   w TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(StepInstance stepInstance)
   w TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   w TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   w Pickles.TestHarness.MsTest.AdditionFeature.ScenarioCleanup() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\Addition.feature.cs:wiersz 0
   w Pickles.TestHarness.MsTest.AdditionFeature.FailToAddTwoNumbers() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\Addition.feature:wiersz 34
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c417c075-9548-4273-a286-38b2b37f4ca8" testId="2124dd33-7aaa-d4fb-c72f-98ad434251c0" testName="NotAutomatedAddingTwoNumbers" computerName="JERUSALEM" duration="00:00:00.0280298" startTime="2013-07-31T19:19:02.9728853+02:00" endTime="2013-07-31T19:19:03.0029058+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c417c075-9548-4273-a286-38b2b37f4ca8">
      <Output>
        <StdOut>Given the calculator has clean memory
-&gt; done: AdditionSteps.GivenTheCalculatorHasCleanMemory() (0,0s)
Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   w lambda_method(Closure , String , Object[] )
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   w TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   w TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   w TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   w Pickles.TestHarness.MsTest.AdditionFeature.ScenarioCleanup() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\Addition.feature.cs:wiersz 0
   w Pickles.TestHarness.MsTest.AdditionFeature.NotAutomatedAddingTwoNumbers() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\Addition.feature:wiersz 46
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="707e3183-1317-4b74-80ed-69b46ed4d3e7" testId="0e090158-43a1-1be8-47c2-13e1b2c9f8c7" testName="NotAutomatedScenario1" computerName="JERUSALEM" duration="00:00:00.0048096" startTime="2013-07-31T19:19:03.0045120+02:00" endTime="2013-07-31T19:19:03.0125190+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="707e3183-1317-4b74-80ed-69b46ed4d3e7">
      <Output>
        <StdOut>Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   w lambda_method(Closure , String , Object[] )
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   w TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   w TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   w TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   w Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.ScenarioCleanup() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature.cs:wiersz 0
   w Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.NotAutomatedScenario1() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature:wiersz 9
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="115665e5-05e1-4d23-acec-523b3018ad2f" testId="067e1c92-2860-531b-28dc-c2863e91b7f5" testName="NotAutomatedScenario2" computerName="JERUSALEM" duration="00:00:00.0042866" startTime="2013-07-31T19:19:03.0145208+02:00" endTime="2013-07-31T19:19:03.0205248+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="115665e5-05e1-4d23-acec-523b3018ad2f">
      <Output>
        <StdOut>Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   w lambda_method(Closure , String , Object[] )
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   w TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   w TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   w TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   w Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.ScenarioCleanup() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature.cs:wiersz 0
   w Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.NotAutomatedScenario2() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature:wiersz 14
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="72a1e263-32dc-4890-977c-eb174bbdc3ba" testId="64813bea-d79b-d74b-adb5-1302eaf5641f" testName="NotAutomatedScenario3" computerName="JERUSALEM" duration="00:00:00.0044110" startTime="2013-07-31T19:19:03.0225249+02:00" endTime="2013-07-31T19:19:03.0285298+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Inconclusive" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="72a1e263-32dc-4890-977c-eb174bbdc3ba">
      <Output>
        <StdOut>Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Given unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

When unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }

Then unimplemented step
-&gt; No matching step definition found for the step. Use the following code to create one:
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }</StdOut>
        <ErrorInfo>
          <Message>Assert.Inconclusive failed. No matching step definition found for one or more steps.
using System;
using TechTalk.SpecFlow;

namespace MyNamespace
{
    [Binding]
    public class StepDefinitions
    {
        [Given(@"unimplemented step")]
        public void GivenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [When(@"unimplemented step")]
        public void WhenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
        
        [Then(@"unimplemented step")]
        public void ThenUnimplementedStep()
        {
            ScenarioContext.Current.Pending();
        }
    }
}
</Message>
          <StackTrace>   w lambda_method(Closure , String , Object[] )
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestInconclusive(String message)
   w TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider.TestPending(String message)
   w TechTalk.SpecFlow.ErrorHandling.ErrorProvider.ThrowPendingError(TestStatus testStatus, String message)
   w TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   w TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   w Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.ScenarioCleanup() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature.cs:wiersz 0
   w Pickles.TestHarness.MsTest.NotAutomatedAtAllFeature.NotAutomatedScenario3() w c:\Users\astral\Documents\GitHub\pickles-testresults\TestHarness\MsTest\NotAutomatedAtAll.feature:wiersz 19
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>